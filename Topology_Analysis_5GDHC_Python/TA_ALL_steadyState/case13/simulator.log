RunScript("/opt/dymola-2018-x86_64/insert/dymola.mos", true);
 = true
Successfully loaded settings file /home/justus/.dassaultsystemes/dymola/setup.dymx
RunScript("./run_simulate.mos");
// File autogenerated
// Do not edit.
cd("/tmp/tmp-simulator-justus-01RkIw/Topology_Analysis_5GDHC_Python_2305");
/tmp/tmp-simulator-justus-01RkIw/Topology_Analysis_5GDHC_Python_2305
 = true
Modelica.Utilities.Files.remove("simulator.log");
OutputCPUtime:=true;
Office2.connected=true;
Pipe_Office2_HeatPump.active=false;
Pipe_Office1_Office3.active=false;
Pipe_Office2_Office3.active=true;
HeatPump.connected=true;
Office3.connected=true;
Pipe_Office1_Office2.active=false;
Office1.connected=false;
Pipe_Office1_HeatPump.active=false;
Pipe_Office3_HeatPump.active=true;
resultFile="Test";
Declaring variable: String resultFile ;
simulateModel("", startTime=0, stopTime=31536000, method="dassl", tolerance=1e-06, resultFile="Test");
 = false
simulate();
Office1.pump_heat.nominalValuesDefineDefaultPressureCurve
The following was detected at time: 0
*** Warning: You are using a flow or pressure controlled mover with the
             default pressure curve.
             This leads to approximate calculations of the electrical power
             consumption. Add the correct pressure curve in the record per
             to obtain an accurate computation.
             Setting nominalValuesDefineDefaultPressureCurve=true will suppress this warning.
Office1.pump_cool.nominalValuesDefineDefaultPressureCurve
The following was detected at time: 0
*** Warning: You are using a flow or pressure controlled mover with the
             default pressure curve.
             This leads to approximate calculations of the electrical power
             consumption. Add the correct pressure curve in the record per
             to obtain an accurate computation.
             Setting nominalValuesDefineDefaultPressureCurve=true will suppress this warning.
Office2.pump_heat.nominalVal
...(message truncated)
Finished
 = true

    if Modelica.Utilities.Files.exist("dsres.mat") then
    Modelica.Utilities.Files.move("dsres.mat", "Test.mat");
    end if;
    savelog("simulator.log");